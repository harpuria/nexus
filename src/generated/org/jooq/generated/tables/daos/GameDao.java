/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.generated.tables.JGame;
import org.jooq.generated.tables.pojos.Game;
import org.jooq.generated.tables.records.GameRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GameDao extends DAOImpl<GameRecord, Game, Integer> {

    /**
     * Create a new GameDao without any configuration
     */
    public GameDao() {
        super(JGame.GAME, Game.class);
    }

    /**
     * Create a new GameDao with an attached configuration
     */
    public GameDao(Configuration configuration) {
        super(JGame.GAME, Game.class, configuration);
    }

    @Override
    public Integer getId(Game object) {
        return object.getGameId();
    }

    /**
     * Fetch records that have <code>GAME_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJGameId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JGame.GAME.GAME_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>GAME_ID IN (values)</code>
     */
    public List<Game> fetchByJGameId(Integer... values) {
        return fetch(JGame.GAME.GAME_ID, values);
    }

    /**
     * Fetch a unique record that has <code>GAME_ID = value</code>
     */
    public Game fetchOneByJGameId(Integer value) {
        return fetchOne(JGame.GAME.GAME_ID, value);
    }

    /**
     * Fetch a unique record that has <code>GAME_ID = value</code>
     */
    public Optional<Game> fetchOptionalByJGameId(Integer value) {
        return fetchOptional(JGame.GAME.GAME_ID, value);
    }

    /**
     * Fetch records that have <code>ORG_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJOrgId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JGame.GAME.ORG_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ORG_ID IN (values)</code>
     */
    public List<Game> fetchByJOrgId(Integer... values) {
        return fetch(JGame.GAME.ORG_ID, values);
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGame.GAME.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<Game> fetchByJName(String... values) {
        return fetch(JGame.GAME.NAME, values);
    }

    /**
     * Fetch records that have <code>CLIENT_APP_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJClientAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JGame.GAME.CLIENT_APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CLIENT_APP_ID IN (values)</code>
     */
    public List<Game> fetchByJClientAppId(UUID... values) {
        return fetch(JGame.GAME.CLIENT_APP_ID, values);
    }

    /**
     * Fetch records that have <code>SIGNATURE_KEY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJSignatureKey(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JGame.GAME.SIGNATURE_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SIGNATURE_KEY IN (values)</code>
     */
    public List<Game> fetchByJSignatureKey(UUID... values) {
        return fetch(JGame.GAME.SIGNATURE_KEY, values);
    }

    /**
     * Fetch records that have <code>GOOGLE_CLIENT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJGoogleClientId(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGame.GAME.GOOGLE_CLIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>GOOGLE_CLIENT_ID IN (values)</code>
     */
    public List<Game> fetchByJGoogleClientId(String... values) {
        return fetch(JGame.GAME.GOOGLE_CLIENT_ID, values);
    }

    /**
     * Fetch records that have <code>GOOGLE_CLIENT_SECRET BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<Game> fetchRangeOfJGoogleClientSecret(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGame.GAME.GOOGLE_CLIENT_SECRET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>GOOGLE_CLIENT_SECRET IN (values)</code>
     */
    public List<Game> fetchByJGoogleClientSecret(String... values) {
        return fetch(JGame.GAME.GOOGLE_CLIENT_SECRET, values);
    }

    /**
     * Fetch records that have <code>STATUS BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGame.GAME.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code>
     */
    public List<Game> fetchByJStatus(String... values) {
        return fetch(JGame.GAME.STATUS, values);
    }

    /**
     * Fetch records that have <code>VERSION BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJVersion(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGame.GAME.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>VERSION IN (values)</code>
     */
    public List<Game> fetchByJVersion(String... values) {
        return fetch(JGame.GAME.VERSION, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJCreatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JGame.GAME.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<Game> fetchByJCreatedAt(OffsetDateTime... values) {
        return fetch(JGame.GAME.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGame.GAME.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<Game> fetchByJCreatedBy(String... values) {
        return fetch(JGame.GAME.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJUpdatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JGame.GAME.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<Game> fetchByJUpdatedAt(OffsetDateTime... values) {
        return fetch(JGame.GAME.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGame.GAME.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<Game> fetchByJUpdatedBy(String... values) {
        return fetch(JGame.GAME.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>IS_DEL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Game> fetchRangeOfJIsDel(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGame.GAME.IS_DEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>IS_DEL IN (values)</code>
     */
    public List<Game> fetchByJIsDel(String... values) {
        return fetch(JGame.GAME.IS_DEL, values);
    }
}
