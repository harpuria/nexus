/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JGameUser;
import org.jooq.generated.tables.pojos.GameUser;
import org.jooq.generated.tables.records.GameUserRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GameUserDao extends DAOImpl<GameUserRecord, GameUser, Integer> {

    /**
     * Create a new GameUserDao without any configuration
     */
    public GameUserDao() {
        super(JGameUser.GAME_USER, GameUser.class);
    }

    /**
     * Create a new GameUserDao with an attached configuration
     */
    public GameUserDao(Configuration configuration) {
        super(JGameUser.GAME_USER, GameUser.class, configuration);
    }

    @Override
    public Integer getId(GameUser object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>USER_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_ID IN (values)</code>
     */
    public List<GameUser> fetchByJUserId(Integer... values) {
        return fetch(JGameUser.GAME_USER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>USER_ID = value</code>
     */
    public GameUser fetchOneByJUserId(Integer value) {
        return fetchOne(JGameUser.GAME_USER.USER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>USER_ID = value</code>
     */
    public Optional<GameUser> fetchOptionalByJUserId(Integer value) {
        return fetchOptional(JGameUser.GAME_USER.USER_ID, value);
    }

    /**
     * Fetch records that have <code>GAME_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJGameId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.GAME_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>GAME_ID IN (values)</code>
     */
    public List<GameUser> fetchByJGameId(Integer... values) {
        return fetch(JGameUser.GAME_USER.GAME_ID, values);
    }

    /**
     * Fetch records that have <code>USER_L_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJUserLId(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.USER_L_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_L_ID IN (values)</code>
     */
    public List<GameUser> fetchByJUserLId(String... values) {
        return fetch(JGameUser.GAME_USER.USER_L_ID, values);
    }

    /**
     * Fetch records that have <code>USER_L_PW BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJUserLPw(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.USER_L_PW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_L_PW IN (values)</code>
     */
    public List<GameUser> fetchByJUserLPw(String... values) {
        return fetch(JGameUser.GAME_USER.USER_L_PW, values);
    }

    /**
     * Fetch records that have <code>PROVIDER BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJProvider(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.PROVIDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROVIDER IN (values)</code>
     */
    public List<GameUser> fetchByJProvider(String... values) {
        return fetch(JGameUser.GAME_USER.PROVIDER, values);
    }

    /**
     * Fetch records that have <code>SOCIAL_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJSocialId(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.SOCIAL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SOCIAL_ID IN (values)</code>
     */
    public List<GameUser> fetchByJSocialId(String... values) {
        return fetch(JGameUser.GAME_USER.SOCIAL_ID, values);
    }

    /**
     * Fetch records that have <code>NICKNAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJNickname(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.NICKNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NICKNAME IN (values)</code>
     */
    public List<GameUser> fetchByJNickname(String... values) {
        return fetch(JGameUser.GAME_USER.NICKNAME, values);
    }

    /**
     * Fetch records that have <code>DEVICE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJDevice(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.DEVICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DEVICE IN (values)</code>
     */
    public List<GameUser> fetchByJDevice(String... values) {
        return fetch(JGameUser.GAME_USER.DEVICE, values);
    }

    /**
     * Fetch records that have <code>BLOCK_START_DATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJBlockStartDate(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.BLOCK_START_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BLOCK_START_DATE IN (values)</code>
     */
    public List<GameUser> fetchByJBlockStartDate(OffsetDateTime... values) {
        return fetch(JGameUser.GAME_USER.BLOCK_START_DATE, values);
    }

    /**
     * Fetch records that have <code>BLOCK_END_DATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJBlockEndDate(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.BLOCK_END_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BLOCK_END_DATE IN (values)</code>
     */
    public List<GameUser> fetchByJBlockEndDate(OffsetDateTime... values) {
        return fetch(JGameUser.GAME_USER.BLOCK_END_DATE, values);
    }

    /**
     * Fetch records that have <code>BLOCK_REASON BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJBlockReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.BLOCK_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BLOCK_REASON IN (values)</code>
     */
    public List<GameUser> fetchByJBlockReason(String... values) {
        return fetch(JGameUser.GAME_USER.BLOCK_REASON, values);
    }

    /**
     * Fetch records that have <code>IS_WITHDRAWAL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJIsWithdrawal(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.IS_WITHDRAWAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>IS_WITHDRAWAL IN (values)</code>
     */
    public List<GameUser> fetchByJIsWithdrawal(String... values) {
        return fetch(JGameUser.GAME_USER.IS_WITHDRAWAL, values);
    }

    /**
     * Fetch records that have <code>WITHDRAWAL_DATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJWithdrawalDate(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.WITHDRAWAL_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>WITHDRAWAL_DATE IN (values)</code>
     */
    public List<GameUser> fetchByJWithdrawalDate(OffsetDateTime... values) {
        return fetch(JGameUser.GAME_USER.WITHDRAWAL_DATE, values);
    }

    /**
     * Fetch records that have <code>WITHDRAWAL_REASON BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJWithdrawalReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.WITHDRAWAL_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>WITHDRAWAL_REASON IN (values)</code>
     */
    public List<GameUser> fetchByJWithdrawalReason(String... values) {
        return fetch(JGameUser.GAME_USER.WITHDRAWAL_REASON, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJCreatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<GameUser> fetchByJCreatedAt(OffsetDateTime... values) {
        return fetch(JGameUser.GAME_USER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<GameUser> fetchByJCreatedBy(String... values) {
        return fetch(JGameUser.GAME_USER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJUpdatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<GameUser> fetchByJUpdatedAt(OffsetDateTime... values) {
        return fetch(JGameUser.GAME_USER.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<GameUser> fetchByJUpdatedBy(String... values) {
        return fetch(JGameUser.GAME_USER.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>IS_DEL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<GameUser> fetchRangeOfJIsDel(String lowerInclusive, String upperInclusive) {
        return fetchRange(JGameUser.GAME_USER.IS_DEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>IS_DEL IN (values)</code>
     */
    public List<GameUser> fetchByJIsDel(String... values) {
        return fetch(JGameUser.GAME_USER.IS_DEL, values);
    }
}
