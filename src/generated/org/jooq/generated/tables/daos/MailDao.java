/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.generated.tables.JMail;
import org.jooq.generated.tables.pojos.Mail;
import org.jooq.generated.tables.records.MailRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MailDao extends DAOImpl<MailRecord, Mail, Integer> {

    /**
     * Create a new MailDao without any configuration
     */
    public MailDao() {
        super(JMail.MAIL, Mail.class);
    }

    /**
     * Create a new MailDao with an attached configuration
     */
    public MailDao(Configuration configuration) {
        super(JMail.MAIL, Mail.class, configuration);
    }

    @Override
    public Integer getId(Mail object) {
        return object.getMailId();
    }

    /**
     * Fetch records that have <code>MAIL_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJMailId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JMail.MAIL.MAIL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>MAIL_ID IN (values)</code>
     */
    public List<Mail> fetchByJMailId(Integer... values) {
        return fetch(JMail.MAIL.MAIL_ID, values);
    }

    /**
     * Fetch a unique record that has <code>MAIL_ID = value</code>
     */
    public Mail fetchOneByJMailId(Integer value) {
        return fetchOne(JMail.MAIL.MAIL_ID, value);
    }

    /**
     * Fetch a unique record that has <code>MAIL_ID = value</code>
     */
    public Optional<Mail> fetchOptionalByJMailId(Integer value) {
        return fetchOptional(JMail.MAIL.MAIL_ID, value);
    }

    /**
     * Fetch records that have <code>GAME_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJGameId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JMail.MAIL.GAME_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>GAME_ID IN (values)</code>
     */
    public List<Mail> fetchByJGameId(Integer... values) {
        return fetch(JMail.MAIL.GAME_ID, values);
    }

    /**
     * Fetch records that have <code>TITLE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMail.MAIL.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TITLE IN (values)</code>
     */
    public List<Mail> fetchByJTitle(String... values) {
        return fetch(JMail.MAIL.TITLE, values);
    }

    /**
     * Fetch records that have <code>CONTENT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMail.MAIL.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CONTENT IN (values)</code>
     */
    public List<Mail> fetchByJContent(String... values) {
        return fetch(JMail.MAIL.CONTENT, values);
    }

    /**
     * Fetch records that have <code>REWARDS BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJRewards(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(JMail.MAIL.REWARDS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>REWARDS IN (values)</code>
     */
    public List<Mail> fetchByJRewards(JSONB... values) {
        return fetch(JMail.MAIL.REWARDS, values);
    }

    /**
     * Fetch records that have <code>SEND_TYPE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJSendType(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMail.MAIL.SEND_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SEND_TYPE IN (values)</code>
     */
    public List<Mail> fetchByJSendType(String... values) {
        return fetch(JMail.MAIL.SEND_TYPE, values);
    }

    /**
     * Fetch records that have <code>EXPIRE_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJExpireAt(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JMail.MAIL.EXPIRE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXPIRE_AT IN (values)</code>
     */
    public List<Mail> fetchByJExpireAt(Long... values) {
        return fetch(JMail.MAIL.EXPIRE_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJCreatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JMail.MAIL.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<Mail> fetchByJCreatedAt(OffsetDateTime... values) {
        return fetch(JMail.MAIL.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMail.MAIL.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<Mail> fetchByJCreatedBy(String... values) {
        return fetch(JMail.MAIL.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJUpdatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JMail.MAIL.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<Mail> fetchByJUpdatedAt(OffsetDateTime... values) {
        return fetch(JMail.MAIL.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMail.MAIL.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<Mail> fetchByJUpdatedBy(String... values) {
        return fetch(JMail.MAIL.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>IS_DEL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Mail> fetchRangeOfJIsDel(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMail.MAIL.IS_DEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>IS_DEL IN (values)</code>
     */
    public List<Mail> fetchByJIsDel(String... values) {
        return fetch(JMail.MAIL.IS_DEL, values);
    }
}
