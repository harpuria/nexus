/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JMultipleProduct;
import org.jooq.generated.tables.pojos.MultipleProduct;
import org.jooq.generated.tables.records.MultipleProductRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MultipleProductDao extends DAOImpl<MultipleProductRecord, MultipleProduct, Integer> {

    /**
     * Create a new MultipleProductDao without any configuration
     */
    public MultipleProductDao() {
        super(JMultipleProduct.MULTIPLE_PRODUCT, MultipleProduct.class);
    }

    /**
     * Create a new MultipleProductDao with an attached configuration
     */
    public MultipleProductDao(Configuration configuration) {
        super(JMultipleProduct.MULTIPLE_PRODUCT, MultipleProduct.class, configuration);
    }

    @Override
    public Integer getId(MultipleProduct object) {
        return object.getMultipleProductId();
    }

    /**
     * Fetch records that have <code>MULTIPLE_PRODUCT_ID BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJMultipleProductId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.MULTIPLE_PRODUCT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>MULTIPLE_PRODUCT_ID IN (values)</code>
     */
    public List<MultipleProduct> fetchByJMultipleProductId(Integer... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.MULTIPLE_PRODUCT_ID, values);
    }

    /**
     * Fetch a unique record that has <code>MULTIPLE_PRODUCT_ID = value</code>
     */
    public MultipleProduct fetchOneByJMultipleProductId(Integer value) {
        return fetchOne(JMultipleProduct.MULTIPLE_PRODUCT.MULTIPLE_PRODUCT_ID, value);
    }

    /**
     * Fetch a unique record that has <code>MULTIPLE_PRODUCT_ID = value</code>
     */
    public Optional<MultipleProduct> fetchOptionalByJMultipleProductId(Integer value) {
        return fetchOptional(JMultipleProduct.MULTIPLE_PRODUCT.MULTIPLE_PRODUCT_ID, value);
    }

    /**
     * Fetch records that have <code>PRODUCT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJProductId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.PRODUCT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PRODUCT_ID IN (values)</code>
     */
    public List<MultipleProduct> fetchByJProductId(Integer... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.PRODUCT_ID, values);
    }

    /**
     * Fetch records that have <code>CURRENCY_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJCurrencyId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.CURRENCY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CURRENCY_ID IN (values)</code>
     */
    public List<MultipleProduct> fetchByJCurrencyId(Integer... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.CURRENCY_ID, values);
    }

    /**
     * Fetch records that have <code>AMOUNT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJAmount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code>
     */
    public List<MultipleProduct> fetchByJAmount(Long... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJCreatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<MultipleProduct> fetchByJCreatedAt(OffsetDateTime... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<MultipleProduct> fetchByJCreatedBy(String... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJUpdatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<MultipleProduct> fetchByJUpdatedAt(OffsetDateTime... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<MultipleProduct> fetchByJUpdatedBy(String... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>IS_DEL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MultipleProduct> fetchRangeOfJIsDel(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMultipleProduct.MULTIPLE_PRODUCT.IS_DEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>IS_DEL IN (values)</code>
     */
    public List<MultipleProduct> fetchByJIsDel(String... values) {
        return fetch(JMultipleProduct.MULTIPLE_PRODUCT.IS_DEL, values);
    }
}
