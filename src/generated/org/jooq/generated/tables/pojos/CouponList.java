/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CouponList implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer couponId;
    private UUID couponSerial;
    private LocalDateTime usedAt;
    private String usedBy;
    private OffsetDateTime createdAt;
    private String createdBy;
    private OffsetDateTime updatedAt;
    private String updatedBy;
    private String isDel;

    public CouponList() {}

    public CouponList(CouponList value) {
        this.couponId = value.couponId;
        this.couponSerial = value.couponSerial;
        this.usedAt = value.usedAt;
        this.usedBy = value.usedBy;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
        this.isDel = value.isDel;
    }

    public CouponList(
        Integer couponId,
        UUID couponSerial,
        LocalDateTime usedAt,
        String usedBy,
        OffsetDateTime createdAt,
        String createdBy,
        OffsetDateTime updatedAt,
        String updatedBy,
        String isDel
    ) {
        this.couponId = couponId;
        this.couponSerial = couponSerial;
        this.usedAt = usedAt;
        this.usedBy = usedBy;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
        this.isDel = isDel;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.COUPON_ID</code>.
     */
    public Integer getCouponId() {
        return this.couponId;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.COUPON_ID</code>.
     */
    public CouponList setCouponId(Integer couponId) {
        this.couponId = couponId;
        return this;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.COUPON_SERIAL</code>.
     */
    public UUID getCouponSerial() {
        return this.couponSerial;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.COUPON_SERIAL</code>.
     */
    public CouponList setCouponSerial(UUID couponSerial) {
        this.couponSerial = couponSerial;
        return this;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.USED_AT</code>.
     */
    public LocalDateTime getUsedAt() {
        return this.usedAt;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.USED_AT</code>.
     */
    public CouponList setUsedAt(LocalDateTime usedAt) {
        this.usedAt = usedAt;
        return this;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.USED_BY</code>.
     */
    public String getUsedBy() {
        return this.usedBy;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.USED_BY</code>.
     */
    public CouponList setUsedBy(String usedBy) {
        this.usedBy = usedBy;
        return this;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.CREATED_AT</code>. 데이터 생성 날짜
     */
    public CouponList setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.CREATED_BY</code>. 데이터 생성자 ID
     */
    public CouponList setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public CouponList setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public CouponList setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>nexus.COUPON_LIST.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return this.isDel;
    }

    /**
     * Setter for <code>nexus.COUPON_LIST.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public CouponList setIsDel(String isDel) {
        this.isDel = isDel;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CouponList other = (CouponList) obj;
        if (this.couponId == null) {
            if (other.couponId != null)
                return false;
        }
        else if (!this.couponId.equals(other.couponId))
            return false;
        if (this.couponSerial == null) {
            if (other.couponSerial != null)
                return false;
        }
        else if (!this.couponSerial.equals(other.couponSerial))
            return false;
        if (this.usedAt == null) {
            if (other.usedAt != null)
                return false;
        }
        else if (!this.usedAt.equals(other.usedAt))
            return false;
        if (this.usedBy == null) {
            if (other.usedBy != null)
                return false;
        }
        else if (!this.usedBy.equals(other.usedBy))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.isDel == null) {
            if (other.isDel != null)
                return false;
        }
        else if (!this.isDel.equals(other.isDel))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.couponId == null) ? 0 : this.couponId.hashCode());
        result = prime * result + ((this.couponSerial == null) ? 0 : this.couponSerial.hashCode());
        result = prime * result + ((this.usedAt == null) ? 0 : this.usedAt.hashCode());
        result = prime * result + ((this.usedBy == null) ? 0 : this.usedBy.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.isDel == null) ? 0 : this.isDel.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CouponList (");

        sb.append(couponId);
        sb.append(", ").append(couponSerial);
        sb.append(", ").append(usedAt);
        sb.append(", ").append(usedBy);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(isDel);

        sb.append(")");
        return sb.toString();
    }
}
