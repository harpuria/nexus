/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GameUser implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer userId;
    private Integer gameId;
    private String userLId;
    private String userLPw;
    private String provider;
    private String socialId;
    private String nickname;
    private String device;
    private OffsetDateTime blockStartDate;
    private OffsetDateTime blockEndDate;
    private String blockReason;
    private String isWithdrawal;
    private OffsetDateTime withdrawalDate;
    private String withdrawalReason;
    private OffsetDateTime createdAt;
    private String createdBy;
    private OffsetDateTime updatedAt;
    private String updatedBy;
    private String isDel;

    public GameUser() {}

    public GameUser(GameUser value) {
        this.userId = value.userId;
        this.gameId = value.gameId;
        this.userLId = value.userLId;
        this.userLPw = value.userLPw;
        this.provider = value.provider;
        this.socialId = value.socialId;
        this.nickname = value.nickname;
        this.device = value.device;
        this.blockStartDate = value.blockStartDate;
        this.blockEndDate = value.blockEndDate;
        this.blockReason = value.blockReason;
        this.isWithdrawal = value.isWithdrawal;
        this.withdrawalDate = value.withdrawalDate;
        this.withdrawalReason = value.withdrawalReason;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
        this.isDel = value.isDel;
    }

    public GameUser(
        Integer userId,
        Integer gameId,
        String userLId,
        String userLPw,
        String provider,
        String socialId,
        String nickname,
        String device,
        OffsetDateTime blockStartDate,
        OffsetDateTime blockEndDate,
        String blockReason,
        String isWithdrawal,
        OffsetDateTime withdrawalDate,
        String withdrawalReason,
        OffsetDateTime createdAt,
        String createdBy,
        OffsetDateTime updatedAt,
        String updatedBy,
        String isDel
    ) {
        this.userId = userId;
        this.gameId = gameId;
        this.userLId = userLId;
        this.userLPw = userLPw;
        this.provider = provider;
        this.socialId = socialId;
        this.nickname = nickname;
        this.device = device;
        this.blockStartDate = blockStartDate;
        this.blockEndDate = blockEndDate;
        this.blockReason = blockReason;
        this.isWithdrawal = isWithdrawal;
        this.withdrawalDate = withdrawalDate;
        this.withdrawalReason = withdrawalReason;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
        this.isDel = isDel;
    }

    /**
     * Getter for <code>nexus.GAME_USER.USER_ID</code>. GAME_USER 테이블 기본키(PK)
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>nexus.GAME_USER.USER_ID</code>. GAME_USER 테이블 기본키(PK)
     */
    public GameUser setUserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.GAME_ID</code>. 해당 유저가 속한 게임 ID (FK)
     */
    public Integer getGameId() {
        return this.gameId;
    }

    /**
     * Setter for <code>nexus.GAME_USER.GAME_ID</code>. 해당 유저가 속한 게임 ID (FK)
     */
    public GameUser setGameId(Integer gameId) {
        this.gameId = gameId;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.USER_L_ID</code>. 유저 로그인 아이디 (소셜 로그인이 아닌
     * 경우)
     */
    public String getUserLId() {
        return this.userLId;
    }

    /**
     * Setter for <code>nexus.GAME_USER.USER_L_ID</code>. 유저 로그인 아이디 (소셜 로그인이 아닌
     * 경우)
     */
    public GameUser setUserLId(String userLId) {
        this.userLId = userLId;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.USER_L_PW</code>. 유저 로그인 패스워드 (소셜 로그인이
     * 아닌 경우)
     */
    public String getUserLPw() {
        return this.userLPw;
    }

    /**
     * Setter for <code>nexus.GAME_USER.USER_L_PW</code>. 유저 로그인 패스워드 (소셜 로그인이
     * 아닌 경우)
     */
    public GameUser setUserLPw(String userLPw) {
        this.userLPw = userLPw;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.PROVIDER</code>. 소셜 로그인 타입
     */
    public String getProvider() {
        return this.provider;
    }

    /**
     * Setter for <code>nexus.GAME_USER.PROVIDER</code>. 소셜 로그인 타입
     */
    public GameUser setProvider(String provider) {
        this.provider = provider;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.SOCIAL_ID</code>. 소셜 로그인 아이디
     */
    public String getSocialId() {
        return this.socialId;
    }

    /**
     * Setter for <code>nexus.GAME_USER.SOCIAL_ID</code>. 소셜 로그인 아이디
     */
    public GameUser setSocialId(String socialId) {
        this.socialId = socialId;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.NICKNAME</code>. 게임에서 사용되는 닉네임
     */
    public String getNickname() {
        return this.nickname;
    }

    /**
     * Setter for <code>nexus.GAME_USER.NICKNAME</code>. 게임에서 사용되는 닉네임
     */
    public GameUser setNickname(String nickname) {
        this.nickname = nickname;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.DEVICE</code>. 접속 기기
     */
    public String getDevice() {
        return this.device;
    }

    /**
     * Setter for <code>nexus.GAME_USER.DEVICE</code>. 접속 기기
     */
    public GameUser setDevice(String device) {
        this.device = device;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.BLOCK_START_DATE</code>. 계정 정지 시작일
     */
    public OffsetDateTime getBlockStartDate() {
        return this.blockStartDate;
    }

    /**
     * Setter for <code>nexus.GAME_USER.BLOCK_START_DATE</code>. 계정 정지 시작일
     */
    public GameUser setBlockStartDate(OffsetDateTime blockStartDate) {
        this.blockStartDate = blockStartDate;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.BLOCK_END_DATE</code>. 계정 정지 종료일
     */
    public OffsetDateTime getBlockEndDate() {
        return this.blockEndDate;
    }

    /**
     * Setter for <code>nexus.GAME_USER.BLOCK_END_DATE</code>. 계정 정지 종료일
     */
    public GameUser setBlockEndDate(OffsetDateTime blockEndDate) {
        this.blockEndDate = blockEndDate;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.BLOCK_REASON</code>. 계정 정지 사유
     */
    public String getBlockReason() {
        return this.blockReason;
    }

    /**
     * Setter for <code>nexus.GAME_USER.BLOCK_REASON</code>. 계정 정지 사유
     */
    public GameUser setBlockReason(String blockReason) {
        this.blockReason = blockReason;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.IS_WITHDRAWAL</code>. 회원탈퇴여부
     */
    public String getIsWithdrawal() {
        return this.isWithdrawal;
    }

    /**
     * Setter for <code>nexus.GAME_USER.IS_WITHDRAWAL</code>. 회원탈퇴여부
     */
    public GameUser setIsWithdrawal(String isWithdrawal) {
        this.isWithdrawal = isWithdrawal;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.WITHDRAWAL_DATE</code>. 게임탈퇴날짜
     */
    public OffsetDateTime getWithdrawalDate() {
        return this.withdrawalDate;
    }

    /**
     * Setter for <code>nexus.GAME_USER.WITHDRAWAL_DATE</code>. 게임탈퇴날짜
     */
    public GameUser setWithdrawalDate(OffsetDateTime withdrawalDate) {
        this.withdrawalDate = withdrawalDate;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.WITHDRAWAL_REASON</code>. 게임탈퇴사유
     */
    public String getWithdrawalReason() {
        return this.withdrawalReason;
    }

    /**
     * Setter for <code>nexus.GAME_USER.WITHDRAWAL_REASON</code>. 게임탈퇴사유
     */
    public GameUser setWithdrawalReason(String withdrawalReason) {
        this.withdrawalReason = withdrawalReason;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>nexus.GAME_USER.CREATED_AT</code>. 데이터 생성 날짜
     */
    public GameUser setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>nexus.GAME_USER.CREATED_BY</code>. 데이터 생성자 ID
     */
    public GameUser setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>nexus.GAME_USER.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public GameUser setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>nexus.GAME_USER.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public GameUser setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_USER.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return this.isDel;
    }

    /**
     * Setter for <code>nexus.GAME_USER.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public GameUser setIsDel(String isDel) {
        this.isDel = isDel;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final GameUser other = (GameUser) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.gameId == null) {
            if (other.gameId != null)
                return false;
        }
        else if (!this.gameId.equals(other.gameId))
            return false;
        if (this.userLId == null) {
            if (other.userLId != null)
                return false;
        }
        else if (!this.userLId.equals(other.userLId))
            return false;
        if (this.userLPw == null) {
            if (other.userLPw != null)
                return false;
        }
        else if (!this.userLPw.equals(other.userLPw))
            return false;
        if (this.provider == null) {
            if (other.provider != null)
                return false;
        }
        else if (!this.provider.equals(other.provider))
            return false;
        if (this.socialId == null) {
            if (other.socialId != null)
                return false;
        }
        else if (!this.socialId.equals(other.socialId))
            return false;
        if (this.nickname == null) {
            if (other.nickname != null)
                return false;
        }
        else if (!this.nickname.equals(other.nickname))
            return false;
        if (this.device == null) {
            if (other.device != null)
                return false;
        }
        else if (!this.device.equals(other.device))
            return false;
        if (this.blockStartDate == null) {
            if (other.blockStartDate != null)
                return false;
        }
        else if (!this.blockStartDate.equals(other.blockStartDate))
            return false;
        if (this.blockEndDate == null) {
            if (other.blockEndDate != null)
                return false;
        }
        else if (!this.blockEndDate.equals(other.blockEndDate))
            return false;
        if (this.blockReason == null) {
            if (other.blockReason != null)
                return false;
        }
        else if (!this.blockReason.equals(other.blockReason))
            return false;
        if (this.isWithdrawal == null) {
            if (other.isWithdrawal != null)
                return false;
        }
        else if (!this.isWithdrawal.equals(other.isWithdrawal))
            return false;
        if (this.withdrawalDate == null) {
            if (other.withdrawalDate != null)
                return false;
        }
        else if (!this.withdrawalDate.equals(other.withdrawalDate))
            return false;
        if (this.withdrawalReason == null) {
            if (other.withdrawalReason != null)
                return false;
        }
        else if (!this.withdrawalReason.equals(other.withdrawalReason))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.isDel == null) {
            if (other.isDel != null)
                return false;
        }
        else if (!this.isDel.equals(other.isDel))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.gameId == null) ? 0 : this.gameId.hashCode());
        result = prime * result + ((this.userLId == null) ? 0 : this.userLId.hashCode());
        result = prime * result + ((this.userLPw == null) ? 0 : this.userLPw.hashCode());
        result = prime * result + ((this.provider == null) ? 0 : this.provider.hashCode());
        result = prime * result + ((this.socialId == null) ? 0 : this.socialId.hashCode());
        result = prime * result + ((this.nickname == null) ? 0 : this.nickname.hashCode());
        result = prime * result + ((this.device == null) ? 0 : this.device.hashCode());
        result = prime * result + ((this.blockStartDate == null) ? 0 : this.blockStartDate.hashCode());
        result = prime * result + ((this.blockEndDate == null) ? 0 : this.blockEndDate.hashCode());
        result = prime * result + ((this.blockReason == null) ? 0 : this.blockReason.hashCode());
        result = prime * result + ((this.isWithdrawal == null) ? 0 : this.isWithdrawal.hashCode());
        result = prime * result + ((this.withdrawalDate == null) ? 0 : this.withdrawalDate.hashCode());
        result = prime * result + ((this.withdrawalReason == null) ? 0 : this.withdrawalReason.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.isDel == null) ? 0 : this.isDel.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GameUser (");

        sb.append(userId);
        sb.append(", ").append(gameId);
        sb.append(", ").append(userLId);
        sb.append(", ").append(userLPw);
        sb.append(", ").append(provider);
        sb.append(", ").append(socialId);
        sb.append(", ").append(nickname);
        sb.append(", ").append(device);
        sb.append(", ").append(blockStartDate);
        sb.append(", ").append(blockEndDate);
        sb.append(", ").append(blockReason);
        sb.append(", ").append(isWithdrawal);
        sb.append(", ").append(withdrawalDate);
        sb.append(", ").append(withdrawalReason);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(isDel);

        sb.append(")");
        return sb.toString();
    }
}
