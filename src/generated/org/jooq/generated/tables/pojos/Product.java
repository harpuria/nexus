/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Product implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer productId;
    private Integer gameId;
    private String purchaseType;
    private Integer currencyId;
    private String name;
    private String desc;
    private BigDecimal price;
    private JSONB rewards;
    private String limitType;
    private OffsetDateTime availableStart;
    private OffsetDateTime availableEnd;
    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;
    private String createdBy;
    private String updatedBy;
    private String isDel;

    public Product() {}

    public Product(Product value) {
        this.productId = value.productId;
        this.gameId = value.gameId;
        this.purchaseType = value.purchaseType;
        this.currencyId = value.currencyId;
        this.name = value.name;
        this.desc = value.desc;
        this.price = value.price;
        this.rewards = value.rewards;
        this.limitType = value.limitType;
        this.availableStart = value.availableStart;
        this.availableEnd = value.availableEnd;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.createdBy = value.createdBy;
        this.updatedBy = value.updatedBy;
        this.isDel = value.isDel;
    }

    public Product(
        Integer productId,
        Integer gameId,
        String purchaseType,
        Integer currencyId,
        String name,
        String desc,
        BigDecimal price,
        JSONB rewards,
        String limitType,
        OffsetDateTime availableStart,
        OffsetDateTime availableEnd,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt,
        String createdBy,
        String updatedBy,
        String isDel
    ) {
        this.productId = productId;
        this.gameId = gameId;
        this.purchaseType = purchaseType;
        this.currencyId = currencyId;
        this.name = name;
        this.desc = desc;
        this.price = price;
        this.rewards = rewards;
        this.limitType = limitType;
        this.availableStart = availableStart;
        this.availableEnd = availableEnd;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.isDel = isDel;
    }

    /**
     * Getter for <code>nexus.PRODUCT.PRODUCT_ID</code>. 상품 아이디 (PK)
     */
    public Integer getProductId() {
        return this.productId;
    }

    /**
     * Setter for <code>nexus.PRODUCT.PRODUCT_ID</code>. 상품 아이디 (PK)
     */
    public Product setProductId(Integer productId) {
        this.productId = productId;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.GAME_ID</code>. 상품이 적용될 게임 아이디 (FK)
     */
    public Integer getGameId() {
        return this.gameId;
    }

    /**
     * Setter for <code>nexus.PRODUCT.GAME_ID</code>. 상품이 적용될 게임 아이디 (FK)
     */
    public Product setGameId(Integer gameId) {
        this.gameId = gameId;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.PURCHASE_TYPE</code>. 구매재화 타입 (캐시, 내부재화)
     */
    public String getPurchaseType() {
        return this.purchaseType;
    }

    /**
     * Setter for <code>nexus.PRODUCT.PURCHASE_TYPE</code>. 구매재화 타입 (캐시, 내부재화)
     */
    public Product setPurchaseType(String purchaseType) {
        this.purchaseType = purchaseType;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.CURRENCY_ID</code>. 상품 타입이 CURRENCY 인 경우,
     * 구매재화 아이디 (FK)
     */
    public Integer getCurrencyId() {
        return this.currencyId;
    }

    /**
     * Setter for <code>nexus.PRODUCT.CURRENCY_ID</code>. 상품 타입이 CURRENCY 인 경우,
     * 구매재화 아이디 (FK)
     */
    public Product setCurrencyId(Integer currencyId) {
        this.currencyId = currencyId;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.NAME</code>. 상품 이름
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>nexus.PRODUCT.NAME</code>. 상품 이름
     */
    public Product setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.DESC</code>. 상품 설명
     */
    public String getDesc() {
        return this.desc;
    }

    /**
     * Setter for <code>nexus.PRODUCT.DESC</code>. 상품 설명
     */
    public Product setDesc(String desc) {
        this.desc = desc;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.PRICE</code>. 상품가격
     */
    public BigDecimal getPrice() {
        return this.price;
    }

    /**
     * Setter for <code>nexus.PRODUCT.PRICE</code>. 상품가격
     */
    public Product setPrice(BigDecimal price) {
        this.price = price;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.REWARDS</code>. 지급 항목
     */
    public JSONB getRewards() {
        return this.rewards;
    }

    /**
     * Setter for <code>nexus.PRODUCT.REWARDS</code>. 지급 항목
     */
    public Product setRewards(JSONB rewards) {
        this.rewards = rewards;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.LIMIT_TYPE</code>. 상품 구매 제한 타입
     */
    public String getLimitType() {
        return this.limitType;
    }

    /**
     * Setter for <code>nexus.PRODUCT.LIMIT_TYPE</code>. 상품 구매 제한 타입
     */
    public Product setLimitType(String limitType) {
        this.limitType = limitType;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.AVAILABLE_START</code>. 상품 판매 시작 날짜
     */
    public OffsetDateTime getAvailableStart() {
        return this.availableStart;
    }

    /**
     * Setter for <code>nexus.PRODUCT.AVAILABLE_START</code>. 상품 판매 시작 날짜
     */
    public Product setAvailableStart(OffsetDateTime availableStart) {
        this.availableStart = availableStart;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.AVAILABLE_END</code>. 상품 판매 종료 날짜
     */
    public OffsetDateTime getAvailableEnd() {
        return this.availableEnd;
    }

    /**
     * Setter for <code>nexus.PRODUCT.AVAILABLE_END</code>. 상품 판매 종료 날짜
     */
    public Product setAvailableEnd(OffsetDateTime availableEnd) {
        this.availableEnd = availableEnd;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>nexus.PRODUCT.CREATED_AT</code>. 데이터 생성 날짜
     */
    public Product setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>nexus.PRODUCT.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public Product setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>nexus.PRODUCT.CREATED_BY</code>. 데이터 생성자 ID
     */
    public Product setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>nexus.PRODUCT.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public Product setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return this.isDel;
    }

    /**
     * Setter for <code>nexus.PRODUCT.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public Product setIsDel(String isDel) {
        this.isDel = isDel;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Product other = (Product) obj;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.gameId == null) {
            if (other.gameId != null)
                return false;
        }
        else if (!this.gameId.equals(other.gameId))
            return false;
        if (this.purchaseType == null) {
            if (other.purchaseType != null)
                return false;
        }
        else if (!this.purchaseType.equals(other.purchaseType))
            return false;
        if (this.currencyId == null) {
            if (other.currencyId != null)
                return false;
        }
        else if (!this.currencyId.equals(other.currencyId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.desc == null) {
            if (other.desc != null)
                return false;
        }
        else if (!this.desc.equals(other.desc))
            return false;
        if (this.price == null) {
            if (other.price != null)
                return false;
        }
        else if (!this.price.equals(other.price))
            return false;
        if (this.rewards == null) {
            if (other.rewards != null)
                return false;
        }
        else if (!this.rewards.equals(other.rewards))
            return false;
        if (this.limitType == null) {
            if (other.limitType != null)
                return false;
        }
        else if (!this.limitType.equals(other.limitType))
            return false;
        if (this.availableStart == null) {
            if (other.availableStart != null)
                return false;
        }
        else if (!this.availableStart.equals(other.availableStart))
            return false;
        if (this.availableEnd == null) {
            if (other.availableEnd != null)
                return false;
        }
        else if (!this.availableEnd.equals(other.availableEnd))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.isDel == null) {
            if (other.isDel != null)
                return false;
        }
        else if (!this.isDel.equals(other.isDel))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.gameId == null) ? 0 : this.gameId.hashCode());
        result = prime * result + ((this.purchaseType == null) ? 0 : this.purchaseType.hashCode());
        result = prime * result + ((this.currencyId == null) ? 0 : this.currencyId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.desc == null) ? 0 : this.desc.hashCode());
        result = prime * result + ((this.price == null) ? 0 : this.price.hashCode());
        result = prime * result + ((this.rewards == null) ? 0 : this.rewards.hashCode());
        result = prime * result + ((this.limitType == null) ? 0 : this.limitType.hashCode());
        result = prime * result + ((this.availableStart == null) ? 0 : this.availableStart.hashCode());
        result = prime * result + ((this.availableEnd == null) ? 0 : this.availableEnd.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.isDel == null) ? 0 : this.isDel.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Product (");

        sb.append(productId);
        sb.append(", ").append(gameId);
        sb.append(", ").append(purchaseType);
        sb.append(", ").append(currencyId);
        sb.append(", ").append(name);
        sb.append(", ").append(desc);
        sb.append(", ").append(price);
        sb.append(", ").append(rewards);
        sb.append(", ").append(limitType);
        sb.append(", ").append(availableStart);
        sb.append(", ").append(availableEnd);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(isDel);

        sb.append(")");
        return sb.toString();
    }
}
