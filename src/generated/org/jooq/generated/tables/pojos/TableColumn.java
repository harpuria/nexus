/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TableColumn implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer columnId;
    private Integer tableId;
    private String columnName;
    private String columnDesc;
    private String columnType;
    private String defaultValue;
    private OffsetDateTime createdAt;
    private String createdBy;
    private OffsetDateTime updatedAt;
    private String updatedBy;
    private String isDel;

    public TableColumn() {}

    public TableColumn(TableColumn value) {
        this.columnId = value.columnId;
        this.tableId = value.tableId;
        this.columnName = value.columnName;
        this.columnDesc = value.columnDesc;
        this.columnType = value.columnType;
        this.defaultValue = value.defaultValue;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
        this.isDel = value.isDel;
    }

    public TableColumn(
        Integer columnId,
        Integer tableId,
        String columnName,
        String columnDesc,
        String columnType,
        String defaultValue,
        OffsetDateTime createdAt,
        String createdBy,
        OffsetDateTime updatedAt,
        String updatedBy,
        String isDel
    ) {
        this.columnId = columnId;
        this.tableId = tableId;
        this.columnName = columnName;
        this.columnDesc = columnDesc;
        this.columnType = columnType;
        this.defaultValue = defaultValue;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
        this.isDel = isDel;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.COLUMN_ID</code>.
     */
    public Integer getColumnId() {
        return this.columnId;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.COLUMN_ID</code>.
     */
    public TableColumn setColumnId(Integer columnId) {
        this.columnId = columnId;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.TABLE_ID</code>.
     */
    public Integer getTableId() {
        return this.tableId;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.TABLE_ID</code>.
     */
    public TableColumn setTableId(Integer tableId) {
        this.tableId = tableId;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.COLUMN_NAME</code>.
     */
    public String getColumnName() {
        return this.columnName;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.COLUMN_NAME</code>.
     */
    public TableColumn setColumnName(String columnName) {
        this.columnName = columnName;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.COLUMN_DESC</code>.
     */
    public String getColumnDesc() {
        return this.columnDesc;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.COLUMN_DESC</code>.
     */
    public TableColumn setColumnDesc(String columnDesc) {
        this.columnDesc = columnDesc;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.COLUMN_TYPE</code>.
     */
    public String getColumnType() {
        return this.columnType;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.COLUMN_TYPE</code>.
     */
    public TableColumn setColumnType(String columnType) {
        this.columnType = columnType;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.DEFAULT_VALUE</code>.
     */
    public String getDefaultValue() {
        return this.defaultValue;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.DEFAULT_VALUE</code>.
     */
    public TableColumn setDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.CREATED_AT</code>. 데이터 생성 날짜
     */
    public TableColumn setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.CREATED_BY</code>. 데이터 생성자 ID
     */
    public TableColumn setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public TableColumn setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public TableColumn setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>nexus.TABLE_COLUMN.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return this.isDel;
    }

    /**
     * Setter for <code>nexus.TABLE_COLUMN.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public TableColumn setIsDel(String isDel) {
        this.isDel = isDel;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TableColumn other = (TableColumn) obj;
        if (this.columnId == null) {
            if (other.columnId != null)
                return false;
        }
        else if (!this.columnId.equals(other.columnId))
            return false;
        if (this.tableId == null) {
            if (other.tableId != null)
                return false;
        }
        else if (!this.tableId.equals(other.tableId))
            return false;
        if (this.columnName == null) {
            if (other.columnName != null)
                return false;
        }
        else if (!this.columnName.equals(other.columnName))
            return false;
        if (this.columnDesc == null) {
            if (other.columnDesc != null)
                return false;
        }
        else if (!this.columnDesc.equals(other.columnDesc))
            return false;
        if (this.columnType == null) {
            if (other.columnType != null)
                return false;
        }
        else if (!this.columnType.equals(other.columnType))
            return false;
        if (this.defaultValue == null) {
            if (other.defaultValue != null)
                return false;
        }
        else if (!this.defaultValue.equals(other.defaultValue))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.isDel == null) {
            if (other.isDel != null)
                return false;
        }
        else if (!this.isDel.equals(other.isDel))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.columnId == null) ? 0 : this.columnId.hashCode());
        result = prime * result + ((this.tableId == null) ? 0 : this.tableId.hashCode());
        result = prime * result + ((this.columnName == null) ? 0 : this.columnName.hashCode());
        result = prime * result + ((this.columnDesc == null) ? 0 : this.columnDesc.hashCode());
        result = prime * result + ((this.columnType == null) ? 0 : this.columnType.hashCode());
        result = prime * result + ((this.defaultValue == null) ? 0 : this.defaultValue.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.isDel == null) ? 0 : this.isDel.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TableColumn (");

        sb.append(columnId);
        sb.append(", ").append(tableId);
        sb.append(", ").append(columnName);
        sb.append(", ").append(columnDesc);
        sb.append(", ").append(columnType);
        sb.append(", ").append(defaultValue);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(isDel);

        sb.append(")");
        return sb.toString();
    }
}
