/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserColumnData implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer userId;
    private Integer columnId;
    private String value;
    private OffsetDateTime createdAt;
    private String createdBy;
    private OffsetDateTime updatedAt;
    private String updatedBy;
    private String isDel;

    public UserColumnData() {}

    public UserColumnData(UserColumnData value) {
        this.userId = value.userId;
        this.columnId = value.columnId;
        this.value = value.value;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
        this.isDel = value.isDel;
    }

    public UserColumnData(
        Integer userId,
        Integer columnId,
        String value,
        OffsetDateTime createdAt,
        String createdBy,
        OffsetDateTime updatedAt,
        String updatedBy,
        String isDel
    ) {
        this.userId = userId;
        this.columnId = columnId;
        this.value = value;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
        this.isDel = isDel;
    }

    /**
     * Getter for <code>nexus.USER_COLUMN_DATA.USER_ID</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>nexus.USER_COLUMN_DATA.USER_ID</code>.
     */
    public UserColumnData setUserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_COLUMN_DATA.COLUMN_ID</code>.
     */
    public Integer getColumnId() {
        return this.columnId;
    }

    /**
     * Setter for <code>nexus.USER_COLUMN_DATA.COLUMN_ID</code>.
     */
    public UserColumnData setColumnId(Integer columnId) {
        this.columnId = columnId;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_COLUMN_DATA.VALUE</code>.
     */
    public String getValue() {
        return this.value;
    }

    /**
     * Setter for <code>nexus.USER_COLUMN_DATA.VALUE</code>.
     */
    public UserColumnData setValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_COLUMN_DATA.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>nexus.USER_COLUMN_DATA.CREATED_AT</code>. 데이터 생성 날짜
     */
    public UserColumnData setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_COLUMN_DATA.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>nexus.USER_COLUMN_DATA.CREATED_BY</code>. 데이터 생성자 ID
     */
    public UserColumnData setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_COLUMN_DATA.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>nexus.USER_COLUMN_DATA.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public UserColumnData setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_COLUMN_DATA.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>nexus.USER_COLUMN_DATA.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public UserColumnData setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_COLUMN_DATA.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return this.isDel;
    }

    /**
     * Setter for <code>nexus.USER_COLUMN_DATA.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public UserColumnData setIsDel(String isDel) {
        this.isDel = isDel;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserColumnData other = (UserColumnData) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.columnId == null) {
            if (other.columnId != null)
                return false;
        }
        else if (!this.columnId.equals(other.columnId))
            return false;
        if (this.value == null) {
            if (other.value != null)
                return false;
        }
        else if (!this.value.equals(other.value))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.isDel == null) {
            if (other.isDel != null)
                return false;
        }
        else if (!this.isDel.equals(other.isDel))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.columnId == null) ? 0 : this.columnId.hashCode());
        result = prime * result + ((this.value == null) ? 0 : this.value.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.isDel == null) ? 0 : this.isDel.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserColumnData (");

        sb.append(userId);
        sb.append(", ").append(columnId);
        sb.append(", ").append(value);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(isDel);

        sb.append(")");
        return sb.toString();
    }
}
