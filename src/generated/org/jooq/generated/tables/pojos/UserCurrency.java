/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserCurrency implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer userCurrencyId;
    private Integer currencyId;
    private Integer userId;
    private Long amount;
    private OffsetDateTime createdAt;
    private String createdBy;
    private OffsetDateTime updatedAt;
    private String updatedBy;
    private String isDel;

    public UserCurrency() {}

    public UserCurrency(UserCurrency value) {
        this.userCurrencyId = value.userCurrencyId;
        this.currencyId = value.currencyId;
        this.userId = value.userId;
        this.amount = value.amount;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
        this.isDel = value.isDel;
    }

    public UserCurrency(
        Integer userCurrencyId,
        Integer currencyId,
        Integer userId,
        Long amount,
        OffsetDateTime createdAt,
        String createdBy,
        OffsetDateTime updatedAt,
        String updatedBy,
        String isDel
    ) {
        this.userCurrencyId = userCurrencyId;
        this.currencyId = currencyId;
        this.userId = userId;
        this.amount = amount;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
        this.isDel = isDel;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.USER_CURRENCY_ID</code>.
     */
    public Integer getUserCurrencyId() {
        return this.userCurrencyId;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.USER_CURRENCY_ID</code>.
     */
    public UserCurrency setUserCurrencyId(Integer userCurrencyId) {
        this.userCurrencyId = userCurrencyId;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.CURRENCY_ID</code>. CURRENCY 테이블 아이디
     * (FK)
     */
    public Integer getCurrencyId() {
        return this.currencyId;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.CURRENCY_ID</code>. CURRENCY 테이블 아이디
     * (FK)
     */
    public UserCurrency setCurrencyId(Integer currencyId) {
        this.currencyId = currencyId;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.USER_ID</code>. USER 아이디 (FK)
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.USER_ID</code>. USER 아이디 (FK)
     */
    public UserCurrency setUserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.AMOUNT</code>. 재화 수량 값
     */
    public Long getAmount() {
        return this.amount;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.AMOUNT</code>. 재화 수량 값
     */
    public UserCurrency setAmount(Long amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.CREATED_AT</code>. 데이터 생성 날짜
     */
    public UserCurrency setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.CREATED_BY</code>. 데이터 생성자 ID
     */
    public UserCurrency setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public UserCurrency setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public UserCurrency setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>nexus.USER_CURRENCY.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return this.isDel;
    }

    /**
     * Setter for <code>nexus.USER_CURRENCY.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public UserCurrency setIsDel(String isDel) {
        this.isDel = isDel;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserCurrency other = (UserCurrency) obj;
        if (this.userCurrencyId == null) {
            if (other.userCurrencyId != null)
                return false;
        }
        else if (!this.userCurrencyId.equals(other.userCurrencyId))
            return false;
        if (this.currencyId == null) {
            if (other.currencyId != null)
                return false;
        }
        else if (!this.currencyId.equals(other.currencyId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!this.amount.equals(other.amount))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.isDel == null) {
            if (other.isDel != null)
                return false;
        }
        else if (!this.isDel.equals(other.isDel))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userCurrencyId == null) ? 0 : this.userCurrencyId.hashCode());
        result = prime * result + ((this.currencyId == null) ? 0 : this.currencyId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.isDel == null) ? 0 : this.isDel.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserCurrency (");

        sb.append(userCurrencyId);
        sb.append(", ").append(currencyId);
        sb.append(", ").append(userId);
        sb.append(", ").append(amount);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(isDel);

        sb.append(")");
        return sb.toString();
    }
}
