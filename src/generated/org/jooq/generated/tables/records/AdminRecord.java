/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JAdmin;
import org.jooq.generated.tables.pojos.Admin;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AdminRecord extends UpdatableRecordImpl<AdminRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>nexus.ADMIN.ADMIN_ID</code>. ADMIN 테이블 기본키 (PK)
     */
    public AdminRecord setAdminId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.ADMIN_ID</code>. ADMIN 테이블 기본키 (PK)
     */
    public Integer getAdminId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>nexus.ADMIN.ORG_ID</code>. 관리자 소속 (FK)
     */
    public AdminRecord setOrgId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.ORG_ID</code>. 관리자 소속 (FK)
     */
    public Integer getOrgId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>nexus.ADMIN.GAME_ID</code>. 담당 게임 ID (FK, 총괄의 경우는 NULL)
     */
    public AdminRecord setGameId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.GAME_ID</code>. 담당 게임 ID (FK, 총괄의 경우는 NULL)
     */
    public Integer getGameId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>nexus.ADMIN.LOGIN_ID</code>. 관리자 로그인 아이디
     */
    public AdminRecord setLoginId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.LOGIN_ID</code>. 관리자 로그인 아이디
     */
    public String getLoginId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>nexus.ADMIN.LOGIN_PW</code>. 관리자 로그인 비밀번호 (암호화 관리)
     */
    public AdminRecord setLoginPw(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.LOGIN_PW</code>. 관리자 로그인 비밀번호 (암호화 관리)
     */
    public String getLoginPw() {
        return (String) get(4);
    }

    /**
     * Setter for <code>nexus.ADMIN.ADMIN_ROLE</code>. 관리자 권한
     */
    public AdminRecord setAdminRole(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.ADMIN_ROLE</code>. 관리자 권한
     */
    public String getAdminRole() {
        return (String) get(5);
    }

    /**
     * Setter for <code>nexus.ADMIN.ADMIN_EMAIL</code>. 관리자 이메일
     */
    public AdminRecord setAdminEmail(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.ADMIN_EMAIL</code>. 관리자 이메일
     */
    public String getAdminEmail() {
        return (String) get(6);
    }

    /**
     * Setter for <code>nexus.ADMIN.ADMIN_NM</code>. 관리자 이름
     */
    public AdminRecord setAdminNm(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.ADMIN_NM</code>. 관리자 이름
     */
    public String getAdminNm() {
        return (String) get(7);
    }

    /**
     * Setter for <code>nexus.ADMIN.CREATED_AT</code>. 데이터 생성 날짜
     */
    public AdminRecord setCreatedAt(OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>nexus.ADMIN.CREATED_BY</code>. 데이터 생성자 ID
     */
    public AdminRecord setCreatedBy(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return (String) get(9);
    }

    /**
     * Setter for <code>nexus.ADMIN.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public AdminRecord setUpdatedAt(OffsetDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>nexus.ADMIN.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public AdminRecord setUpdatedBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>nexus.ADMIN.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public AdminRecord setIsDel(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>nexus.ADMIN.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminRecord
     */
    public AdminRecord() {
        super(JAdmin.ADMIN);
    }

    /**
     * Create a detached, initialised AdminRecord
     */
    public AdminRecord(Integer adminId, Integer orgId, Integer gameId, String loginId, String loginPw, String adminRole, String adminEmail, String adminNm, OffsetDateTime createdAt, String createdBy, OffsetDateTime updatedAt, String updatedBy, String isDel) {
        super(JAdmin.ADMIN);

        setAdminId(adminId);
        setOrgId(orgId);
        setGameId(gameId);
        setLoginId(loginId);
        setLoginPw(loginPw);
        setAdminRole(adminRole);
        setAdminEmail(adminEmail);
        setAdminNm(adminNm);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        setIsDel(isDel);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AdminRecord
     */
    public AdminRecord(Admin value) {
        super(JAdmin.ADMIN);

        if (value != null) {
            setAdminId(value.getAdminId());
            setOrgId(value.getOrgId());
            setGameId(value.getGameId());
            setLoginId(value.getLoginId());
            setLoginPw(value.getLoginPw());
            setAdminRole(value.getAdminRole());
            setAdminEmail(value.getAdminEmail());
            setAdminNm(value.getAdminNm());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            setIsDel(value.getIsDel());
            resetChangedOnNotNull();
        }
    }
}
