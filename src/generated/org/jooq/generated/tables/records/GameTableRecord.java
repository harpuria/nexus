/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JGameTable;
import org.jooq.generated.tables.pojos.GameTable;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GameTableRecord extends UpdatableRecordImpl<GameTableRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>nexus.GAME_TABLE.TABLE_ID</code>. GAME_TABLE 테이블 기본키(PK)
     */
    public GameTableRecord setTableId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.TABLE_ID</code>. GAME_TABLE 테이블 기본키(PK)
     */
    public Integer getTableId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>nexus.GAME_TABLE.GAME_ID</code>. 해당 테이블을 사용하는 게임 ID (FK)
     */
    public GameTableRecord setGameId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.GAME_ID</code>. 해당 테이블을 사용하는 게임 ID (FK)
     */
    public Integer getGameId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>nexus.GAME_TABLE.NAME</code>. 테이블 이름
     */
    public GameTableRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.NAME</code>. 테이블 이름
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>nexus.GAME_TABLE.DESCRIPTION</code>. 테이블 설명
     */
    public GameTableRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.DESCRIPTION</code>. 테이블 설명
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>nexus.GAME_TABLE.CREATED_AT</code>. 데이터 생성 날짜
     */
    public GameTableRecord setCreatedAt(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>nexus.GAME_TABLE.CREATED_BY</code>. 데이터 생성자 ID
     */
    public GameTableRecord setCreatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>nexus.GAME_TABLE.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public GameTableRecord setUpdatedAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>nexus.GAME_TABLE.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public GameTableRecord setUpdatedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>nexus.GAME_TABLE.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public GameTableRecord setIsDel(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>nexus.GAME_TABLE.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameTableRecord
     */
    public GameTableRecord() {
        super(JGameTable.GAME_TABLE);
    }

    /**
     * Create a detached, initialised GameTableRecord
     */
    public GameTableRecord(Integer tableId, Integer gameId, String name, String description, OffsetDateTime createdAt, String createdBy, OffsetDateTime updatedAt, String updatedBy, String isDel) {
        super(JGameTable.GAME_TABLE);

        setTableId(tableId);
        setGameId(gameId);
        setName(name);
        setDescription(description);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        setIsDel(isDel);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised GameTableRecord
     */
    public GameTableRecord(GameTable value) {
        super(JGameTable.GAME_TABLE);

        if (value != null) {
            setTableId(value.getTableId());
            setGameId(value.getGameId());
            setName(value.getName());
            setDescription(value.getDescription());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            setIsDel(value.getIsDel());
            resetChangedOnNotNull();
        }
    }
}
