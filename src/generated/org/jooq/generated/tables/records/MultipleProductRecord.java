/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JMultipleProduct;
import org.jooq.generated.tables.pojos.MultipleProduct;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MultipleProductRecord extends UpdatableRecordImpl<MultipleProductRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.MULTIPLE_PRODUCT_ID</code>. 복합 상품
     * 아이디 (PK)
     */
    public MultipleProductRecord setMultipleProductId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.MULTIPLE_PRODUCT_ID</code>. 복합 상품
     * 아이디 (PK)
     */
    public Integer getMultipleProductId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.PRODUCT_ID</code>. 상품 아이디 (FK)
     */
    public MultipleProductRecord setProductId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.PRODUCT_ID</code>. 상품 아이디 (FK)
     */
    public Integer getProductId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.CURRENCY_ID</code>. 지급할 재화 아이디
     * (FK)
     */
    public MultipleProductRecord setCurrencyId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.CURRENCY_ID</code>. 지급할 재화 아이디
     * (FK)
     */
    public Integer getCurrencyId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.AMOUNT</code>. 지급할 수량
     */
    public MultipleProductRecord setAmount(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.AMOUNT</code>. 지급할 수량
     */
    public Long getAmount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.CREATED_AT</code>. 데이터 생성 날짜
     */
    public MultipleProductRecord setCreatedAt(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.CREATED_BY</code>. 데이터 생성자 ID
     */
    public MultipleProductRecord setCreatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public MultipleProductRecord setUpdatedAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public MultipleProductRecord setUpdatedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>nexus.MULTIPLE_PRODUCT.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public MultipleProductRecord setIsDel(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>nexus.MULTIPLE_PRODUCT.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MultipleProductRecord
     */
    public MultipleProductRecord() {
        super(JMultipleProduct.MULTIPLE_PRODUCT);
    }

    /**
     * Create a detached, initialised MultipleProductRecord
     */
    public MultipleProductRecord(Integer multipleProductId, Integer productId, Integer currencyId, Long amount, OffsetDateTime createdAt, String createdBy, OffsetDateTime updatedAt, String updatedBy, String isDel) {
        super(JMultipleProduct.MULTIPLE_PRODUCT);

        setMultipleProductId(multipleProductId);
        setProductId(productId);
        setCurrencyId(currencyId);
        setAmount(amount);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        setIsDel(isDel);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MultipleProductRecord
     */
    public MultipleProductRecord(MultipleProduct value) {
        super(JMultipleProduct.MULTIPLE_PRODUCT);

        if (value != null) {
            setMultipleProductId(value.getMultipleProductId());
            setProductId(value.getProductId());
            setCurrencyId(value.getCurrencyId());
            setAmount(value.getAmount());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            setIsDel(value.getIsDel());
            resetChangedOnNotNull();
        }
    }
}
