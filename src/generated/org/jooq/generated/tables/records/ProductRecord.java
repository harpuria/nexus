/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JProduct;
import org.jooq.generated.tables.pojos.Product;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>nexus.PRODUCT.PRODUCT_ID</code>. 상품 아이디 (PK)
     */
    public ProductRecord setProductId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.PRODUCT_ID</code>. 상품 아이디 (PK)
     */
    public Integer getProductId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>nexus.PRODUCT.GAME_ID</code>. 상품이 적용될 게임 아이디 (FK)
     */
    public ProductRecord setGameId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.GAME_ID</code>. 상품이 적용될 게임 아이디 (FK)
     */
    public Integer getGameId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>nexus.PRODUCT.PRODUCT_TYPE</code>. 상품 타입 (단일, 복합(패키지))
     */
    public ProductRecord setProductType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.PRODUCT_TYPE</code>. 상품 타입 (단일, 복합(패키지))
     */
    public String getProductType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>nexus.PRODUCT.PURCHASE_TYPE</code>.
     */
    public ProductRecord setPurchaseType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.PURCHASE_TYPE</code>.
     */
    public String getPurchaseType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>nexus.PRODUCT.CURRENCY_ID</code>. 상품 타입이 CURRENCY 인 경우,
     * 구매재화 아이디 (FK)
     */
    public ProductRecord setCurrencyId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.CURRENCY_ID</code>. 상품 타입이 CURRENCY 인 경우,
     * 구매재화 아이디 (FK)
     */
    public Integer getCurrencyId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>nexus.PRODUCT.NAME</code>. 상품 이름
     */
    public ProductRecord setName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.NAME</code>. 상품 이름
     */
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>nexus.PRODUCT.DESC</code>. 상품 설명
     */
    public ProductRecord setDesc(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.DESC</code>. 상품 설명
     */
    public String getDesc() {
        return (String) get(6);
    }

    /**
     * Setter for <code>nexus.PRODUCT.PRICE</code>. 상품가격
     */
    public ProductRecord setPrice(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.PRICE</code>. 상품가격
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>nexus.PRODUCT.CREATED_AT</code>. 데이터 생성 날짜
     */
    public ProductRecord setCreatedAt(OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.CREATED_AT</code>. 데이터 생성 날짜
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>nexus.PRODUCT.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public ProductRecord setUpdatedAt(OffsetDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.UPDATED_AT</code>. 데이터 수정 날짜
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>nexus.PRODUCT.CREATED_BY</code>. 데이터 생성자 ID
     */
    public ProductRecord setCreatedBy(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.CREATED_BY</code>. 데이터 생성자 ID
     */
    public String getCreatedBy() {
        return (String) get(10);
    }

    /**
     * Setter for <code>nexus.PRODUCT.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public ProductRecord setUpdatedBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.UPDATED_BY</code>. 데이터 수정자 ID
     */
    public String getUpdatedBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>nexus.PRODUCT.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public ProductRecord setIsDel(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>nexus.PRODUCT.IS_DEL</code>. 데이터 삭제 여부 (기본값 N)
     */
    public String getIsDel() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(JProduct.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Integer productId, Integer gameId, String productType, String purchaseType, Integer currencyId, String name, String desc, BigDecimal price, OffsetDateTime createdAt, OffsetDateTime updatedAt, String createdBy, String updatedBy, String isDel) {
        super(JProduct.PRODUCT);

        setProductId(productId);
        setGameId(gameId);
        setProductType(productType);
        setPurchaseType(purchaseType);
        setCurrencyId(currencyId);
        setName(name);
        setDesc(desc);
        setPrice(price);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCreatedBy(createdBy);
        setUpdatedBy(updatedBy);
        setIsDel(isDel);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Product value) {
        super(JProduct.PRODUCT);

        if (value != null) {
            setProductId(value.getProductId());
            setGameId(value.getGameId());
            setProductType(value.getProductType());
            setPurchaseType(value.getPurchaseType());
            setCurrencyId(value.getCurrencyId());
            setName(value.getName());
            setDesc(value.getDesc());
            setPrice(value.getPrice());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedBy(value.getUpdatedBy());
            setIsDel(value.getIsDel());
            resetChangedOnNotNull();
        }
    }
}
